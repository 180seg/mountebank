<%
title = 'help make it awesome'
description = 'Help make mountebank an awesome tool but making open source contributions'
%>

<% include _header %>

<h1>Contributing</h1>

<p>mountebank has ambitious goals, and welcomes anyone willing to join his army of open source developers.
For his own open loops, visit the <a href='https://github.com/bbyars/mountebank/issues?state=open'>issues</a> page.
However, he welcomes other ideas.</p>

<p>mountebank wants to keep the bar for contribution quite low and make it as pleasant an experience for developers
as it is for users.  He suggests that you run the
<a href='https://github.com/bbyars/mountebank/blob/master/build'>build script</a> before committing (just run <code>./build</code>
from the command line).  mountebank is more than happy to help you make it pass via email or the
<a href='/support'>support</a> page.  He will even try to accept pull requests that fail the build script by
fixing the error on his end.  Below are a few other tips for those who wish to dig deeper.</p>

<h2>JavaScript OO</h2>

<p>mountebank loves JavaScript, but he is not a learn&egrave;d man, and parts of the language confuse him.
In particular, the <code>new</code> and <code>this</code> keywords are prone to cause problems with someone
of mountebank's limited understanding.  mountebank paired with <a href='http://blog.thepete.net/'>Pete Hodgson</a>
to do a talk on programming without those keywords <a href='http://usergroup.tv/videos/keeping-up-with-javascript'>here</a>
(thanks to Pete for allowing the use of his deck and material).</p>

<p>Many of mountebank's modules have constructors of sorts, although the priesthood of JavaScript developers may
scorn them.  He calls the creation method <code>create</code>, and often exposes that as the only method from a
module.  In typical JavaScript fashion, he names variables of the module itself with a capital first letter if
they are to be subsequently created.  See
<a href='https://github.com/bbyars/mountebank/blob/master/src/mountebank.js'>mountebank.js</a> for an example.</p>

<p>mountebank's creation methods always explicitly return an object, rather than relying on the mysterious power
of JavaScript contexts.  This helps keep mountebank's simple brain from exploding.</p>

<h2>Dependency Injection</h2>

<p>node's <code>require</code> function serves a dual purpose, and mountebank initially fell into the trap of failing to
distinguish between those purposes.  First, it is used to request a module from node's package management system.
Second, it is used to include a dependency in a module.</p>

<p>mountebank humbly requests that you consider whether the second goal would best be served by using constructor
dependency injection.  mountebank finds that it keeps the code clean, and makes the code more testable.
He did initially play with <a href='https://github.com/mfncooper/mockery'>mockery</a> to avoid dependency injection,
and despite the excellence of the library, he found both the code and tests harder to understand.</p>

<h2>Asynchronous Code</h2>

<p>mountebank asks that you use promises.  He has included <a href='https://github.com/kriskowal/q'>Q</a> in the
codebase.  The inimitable <a href='http://blog.thepete.net/'>Pete Hodgson</a> taught mountebank how to
<a href='http://martinfowler.com/articles/asyncJS.html'>test asynchronous JavaScript</a> using promises.  Despite the
mind-warping ramp-up needed to comprehend promises, mountebank has found that they pay off many times over
in both testability and structuring difficult combinations of parallelism and sequence.</p>

<h2>Backwards Compatibility</h2>

<p>mountebank has gone on record as recommending avoiding the need for API versioning if at all possible
(<a href='http://martinfowler.com/articles/enterpriseREST.html#versioning'>essay</a>
<a href='http://www.infoq.com/presentations/constraints-api-rest-integration'>presentation</a>).
mountebank may make some suggestions to any API changes you make in an effort to make them more
future-compatible.  You can help by thinking through any breaking changes you make and explaining the
reasons in the commit messages.</p>

<% include _footer %>
