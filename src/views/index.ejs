<% include _header %>

<h1>Welcome, friend</h1>

<p>mountebank is the first tool to provide multi-protocol, multi-language test
doubles over the wire.  Simply point your application under test to mountebank
instead of the real dependency, and test like you would with traditional stubs and mocks.
mountebank will cure what ails you, guaranteed.</p>

<h2>How it works</h2>

<p>mountebank employs a legion of <em>imposters</em> to act as on-demand test doubles.
Your test communicates to mountebank over http using the <a href='/docs/api/overview'>api</a>
to set up <a href='/docs/api/stubs'>stubs</a>, <a href='/docs/api/proxies'>record and replay proxies</a>,
and verify <a href='/docs/api/mocks'>mock expectations</a>.  In the typical use case, each
test will start an imposter during test setup and stop an imposter during test teardown.</p>

<p>mountebank employs several types of imposters, each responding to a specific protocol.
Typically, your test will tell the imposter which port to bind to, and the imposter will
open the corresponding socket.</p>

<img src='/images/overview.gif' alt='mountebank' />

<p>View the <a href='/docs/gettingStarted'>getting started guide</a> for a quick introduction.</p>

<h2>Testimonials</h2>

<blockquote>
  <p>With mountebank, maybe we <em>could</em> have built it in a day.</p>
  <p class='cite'>Remus and Romulus, builders of Rome</p>
</blockquote>

<blockquote>
  <p class='quote'>With mountebank, all the world's a nail.</p>
  <p class='cite'>Thor, God of Thunder</p>
</blockquote>

<blockquote>
  <p>If at first you don't succeed, it's because you didn't use mountebank.</p>
  <p class='cite'>Mom</p>
</blockquote>

<% include _footer %>
