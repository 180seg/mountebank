# OSX agents don't have nvm pre-installed, and installing it manually
# gives a lot more control over testing packaging options
language: ruby

env:
  global:
    - MB_SLOW_TEST_TIMEOUT=5000
    # HEROKU_API_KEY
    - secure: "BQunTTpCSGjhIYiBAXKxuuOluJIhKXdW/94GCsPlK1N8Ln20/nj/0U4qnSH7yASWQWssVG4ttm/cAbjfi+3DS4KDLtBGK1i3IoM+cJ2ADCeG7BHsqJDB0f9JyAkULjIRdkqilzR/tyD+w78pPHd7QbfplLvqUcnt7HVxw9lp4PY="
    # AWS_ACCESS_KEY
    - secure: "H0iUwBPOwRf3+5HGqAXWU65dJIA+4SUltehM3+jiTXsqkxeHux3WqVOouaLlw2n8WaG9y1KMXEZzed6L8p8A3I6V2M+Y1n8qNYT8y/HjCTw4d3U0tiG6ef1ysIChdBOdlwXJT5GPLlLT0y+R4IgPfHd3DMx/aiEgT3O4gGZEchs="
    # NPM_API_KEY
    - secure: "pbVyYwERkTpwkpFTqXjwsMkNpulV0ZV1HbBZeEBhpWY7MjIjjASd/kDwDBr4ONuiicOQ3ToL4MeKxgI2bxjQdhDhfBvMt5XZV6V8X8xktwZQsnkc9klD0qr5raQ6MZdWQzx4nlsgFLHO9k0w8D/EzQbz25E4KAicpaYYwejyig8="

matrix:
  include:
    - os: osx
      sudo: true
      env:
        - NODE_VERSION=4.0
        - MB_GRUNT_TASK='test:pkg deployS3'
    - os: osx
      sudo: false
      env:
        - NODE_VERSION=4.0
        - MB_GRUNT_TASK='test:tarball:x64 deployS3'
    - os: osx
      sudo: false
      env:
        - NODE_VERSION=0.12
    - os: osx
      sudo: false
      env:
        - NODE_VERSION=0.10
    - os: linux
      sudo: true
      env:
        - NODE_VERSION=4.0
        - MB_INSTALL_RPM=true
        - MB_GRUNT_TASK='test:deb dist:package:rpm deployS3 deployHeroku deployNpm'
    - os: linux
      sudo: false
      env:
        - NODE_VERSION=4.0
        - MB_GRUNT_TASK='test:npm dist:zip:x64 dist:zip:x86 deployS3'
    - os: linux
      sudo: false
      env:
        - NODE_VERSION=4.0
        - MB_GRUNT_TASK='test:tarball:x64 dist:tarball:x86 deployS3 coveralls'
    - os: linux
      sudo: false
      env:
        - NODE_VERSION=0.12
    - os: linux
      sudo: false
      env:
        - NODE_VERSION=0.10

install:
  - rm -rf ~/.nvm
  - git clone https://github.com/creationix/nvm.git ~/.nvm
  - source ~/.nvm/nvm.sh
  - nvm install $NODE_VERSION
  - node --version
  - bundle install
  - if [ "$MB_INSTALL_RPM" = "true" ]; then sudo apt-get update && sudo apt-get install rpm; fi
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then export MB_DEPLOY=true; else export MB_DEPLOY=false; fi
  - if [ "$TRAVIS_PULL_REQUEST" = "false" -a -n "`git describe --tags --exact-match 2>/dev/null`" ]; then export MB_PUBLISH=true; else export MB_PUBLISH=false; fi

script:
  - echo "MB_DEPLOY - $MB_DEPLOY"
  - echo "MB_PUBLISH - $MB_PUBLISH"
  - ./build $MB_GRUNT_TASK
