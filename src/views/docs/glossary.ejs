<% include ../_header %>

<h1>Lexicon</h1>

<p>mountebank exposes a considerable amount of power with only a few concepts, but knowing
what those concepts represent can greatly help in learning how to use the tool.</p>

<dl>
  <dt>imposter</dt>
  <dd>A server representing a test double.  An <em>imposter</em> is identified by a port and
  a protocol.  mountebank is non-modal and can create as many <em>imposters</em> as your test requires.</dd>

  <dt>stub</dt>
  <dd>A set of behaviors used to generate a response for an <em>imposter</em>.  An <em>imposter</em>
  can have 0 or more <em>stubs</em>, each of which are associated with different <em>predicates</em>.</dd>

  <dt>predicate</dt>
  <dd>A condition that determines whether a given <em>stub</em> is responsible for responding.  Each
  <em>stub</em> can have 0 or more <em>predicates</em>.</dd>

  <dt>response</dt>
  <dd>The behavior that generates the response for a <em>stub</em>.  Each <em>stub</em> can have
  0 or more <em>responses</em>.</dd>

  <dt>stub resolver</dt>
  <dd>Defines the specific behavior used to generate a response.  The simplest resolver is called
  <em>is</em>, and allows you to define the <em>imposter's</em> response directly.  Each
  <em>response</em> has exactly one <em>stub resolver</em>.</dd>

  <dt>proxy</dt>
  <dd>A specific type of <em>stub resolver</em> that allows you to pass a request through to another
  server and remember the response for later playback.</dd>

  <dt>injection</dt>
  <dd>A specific type of <em>stub resolver</em> that allows you to inject JavaScript to determine
  the <em>imposter's</em> response.  Also supported as a <em>predicate</em> to allow sophisticated
  logic to determine whether a particular <em>stub</em> should be used or not.</dd>

</dl>

<% include ../_footer %>
