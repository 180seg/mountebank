<p>The <code>exists</code> predicate isn't particularly useful for the TCP
protocol, as it's mainly meant for list elements like HTTP headers.  Let's
test it out with a binary imposter:</p>

<pre><code data-test-id='tcp exists example'
           data-test-step='1'
           data-test-type='http'>
POST /imposters HTTP/1.1
Host: localhost:<%= port %>
Accept: application/json
Content-Type: application/json

{
  "port": 4551,
  "protocol": "tcp",
  "mode": "binary",
  "stubs": [<strong class='highlight1'>
    {
      "responses": [{ "is": { "data": "Zmlyc3QgcmVzcG9uc2U=" } }],
      "predicates": { "data": { "exists": true } }
    }</strong>,<strong class='highlight2'>
    {
      "responses": [{ "is": { "data": "c2Vjb25kIHJlc3BvbnNl" } }],
      "predicates": { "data": { "exists": false } }
    }</strong>
  ]
}
</code></pre>

<p>The first stub always matches if any data was sent:</p>

<pre><code data-test-id='tcp exists example'
           data-test-step='2'
           data-test-type='exec'>
echo '<strong class='highlight1'>AQIDBA==</strong>' | base64 --decode | nc localhost 4551
</code></pre>

<pre><code data-test-id='tcp exists example'
           data-test-verify-step='2'>
<strong class='highlight1'>first response</strong>
</code></pre>

<p>There isn't really a way <em>not</em> to send data, so the second stub never matches.</p>

<code class='hidden' data-test-id='tcp exists example'
                     data-test-step='3'
                     data-test-type='http'>
GET /imposters/4551 HTTP/1.1
Host: localhost:<%= port %>
Accept: application/json
</code>

<code class='hidden' data-test-id='tcp exists example'
                     data-test-verify-step='3'
                     data-test-type='http'
                     data-test-ignore-lines='["^Date", "requestFrom", "timestamp"]'>
HTTP/1.1 200 OK
Vary: Accept
Content-Type: application/json
Content-Length: 996
Date: Sat, 11 Jan 2014 01:22:32 GMT
Connection: keep-alive

{
  "protocol": "tcp",
  "port": 4551,
  "mode": "binary",
  "requests": [
    {
      "requestFrom": "127.0.0.1:53330",
      "data": "AQIDBA=="
    }
  ],
  "stubs": [
    {
      "responses": [
        {
          "is": {
            "data": "Zmlyc3QgcmVzcG9uc2U="
          }
        }
      ],
      "predicates": {
        "data": {
          "exists": true
        }
      },
      "matches": [
        {
          "timestamp": "2014-01-11T01:22:32.617Z",
          "request": {
            "requestFrom": "127.0.0.1:53330",
            "data": "AQIDBA=="
          },
          "response": {
            "data": "Zmlyc3QgcmVzcG9uc2U="
          }
        }
      ]
    },
    {
      "responses": [
        {
          "is": {
            "data": "c2Vjb25kIHJlc3BvbnNl"
          }
        }
      ],
      "predicates": {
        "data": {
          "exists": false
        }
      }
    }
  ],
  "_links": {
    "self": {
      "href": "http://localhost:<%= port %>/imposters/4551"
    }
  }
}
</code>

<code class='hidden' data-test-id='tcp exists example'
                     data-test-step='4'
                     data-test-type='http'>
DELETE /imposters/4551 HTTP/1.1
Host: localhost:<%= port %>
Accept: application/json
</code>
