version: 2.1

executors:
  node-maintenance:
    docker:
      - image: circleci/node:12-stretch
    environment:
      - MB_SLOW_TEST_TIMEOUT: 7000
  node-active:
    docker:
      - image: circleci/node:14-stretch
    environment:
      - MB_SLOW_TEST_TIMEOUT: 7000
  node-current:
    docker:
      - image: circleci/node:16-stretch
    environment:
      - MB_SLOW_TEST_TIMEOUT: 7000

jobs:
  pr:
    docker:
      - image: node-active
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            npm ci
            cd mbTest && npm install
      - run: npm test
      - store_test_results:
          path: testResults

  build:
    executor: node-active
    environment:
      - CC_TEST_REPORTER_ID=8bc3a050a2f8ef1cc460e5f4c72d18a689c8ae0981bf494031eb4eb28bbd0b0b
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            npm ci
            cd mbTest && npm install
      - run:
          name: Version
          command: node tasks/tmp/version.js
      - run: npm test
      - run:
          name: Docs and Static Analysis
          command: |
            scripts/codeclimate
            cat ./coverage/lcov.info | node_modules/coveralls/bin/coveralls.js
            scripts/sonar
            npm run jsdoc && node tasks/tmp/deploy/docs.js
      - run:
          name: Dist
          command: |
            node tasks/tmp/dist.js
            cd dist && npm pack mountebank
      - store_test_results:
          path: testResults
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - tasks
            - scripts
            - Procfile

  maintenanceOutOfProcessImposters:
    executor: node-maintenance
    environment:
      - MB_PORT: 3535
      - MB_PERSISTENT: true
      - MB_EXECUTABLE: ~/dist/mountebank/bin/mb
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Prepare to run out of process protocol implementations
          command: node tasks/tmp/createProtocolsFile.js outOfProcess.json
      - run:
          name: Test
          command: |
            node tasks/tmp/mb.js start --allowInjection --mock --localOnly --protofile outOfProcess.json
            (cd dist/test && npm test)
      - store_test_results:
          path: testResults

  currentWithFileDBAndWebTests:
    executor: node-current
    environment:
      - MB_PORT: 3535
      - MB_RUN_WEB_TESTS: true
      - MB_EXECUTABLE: ~/dist/mountebank/bin/mb
    steps:
      - attach_workspace:
          at: .
      - run: npm run config:outOfProcess && npm run test:functional
      - store_test_results:
          path: testResults

  performance:
    executor: node-active
    environment:
      - MB_PORT: 3535
      - MB_EXECUTABLE: ~/dist/mountebank/bin/mb
    steps:
      - attach_workspace:
          at: .
      - run: (cd mbTest && npm run perf)
      - store_test_results:
          path: testResults


#
#  deploy:
#    docker:
#      - image: circleci/ruby:2.4.4-stretch
#    steps:
#      - setup_remote_docker
#      - attach_workspace:
#          at: .
#      - run:
#          name: Update Node.js and npm
#          command: |
#            curl -sSL "https://nodejs.org/dist/v12.9.1/node-v12.9.1-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v12.9.1-linux-x64/bin/node
#            curl https://www.npmjs.com/install.sh | sudo bash
#      - run:
#          name: Check current version of node
#          command: node -v
#      - run: ls -al dist
#        # $BASH_ENV workaround due to env var isolation: https://discuss.circleci.com/t/exporting-environment-variables-from-sourced-scripts/4564/4
#      - run: if [ -n "`grep publish=true build.properties`" ]; then echo export MB_PUBLISH=true >> "$BASH_ENV"; else echo export MB_PUBLISH=false >> "$BASH_ENV"; fi
#      - run: echo "MB_PUBLISH=$MB_PUBLISH"
#      # fpm install started failing even after bundle update
#      - run: gem install fpm
#      - run: bundle install --without development
#      - run: ln -s dist/mountebank/src src
#      - run: ln -s dist/mountebank/package.json package.json
#      - run: node_modules/grunt-cli/bin/grunt deploy:s3 deploy:heroku deploy:npm deploy:docker

workflows:
  version: 2
  pipeline:
    jobs:
      - pr:
          filters:
            branches:
              ignore: master
      - build:
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - maintenanceOutOfProcessImposters:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - currentWithFileDBAndWebTests:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
      - performance:
          requires:
            - build
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
